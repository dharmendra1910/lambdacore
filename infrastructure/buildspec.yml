---

version: 0.2

env:
  variables:
    # APP_ID and ARTIFACTS_BUCKET are available
    # coming from the CD pipline
    PIP_CACHE: pip_cache # used in install_deps.sh

phases:
  install:
    commands:
      - printenv
      - apt-get -qq update && apt-get -qq install zip
      - pip install -q awscli --upgrade --user
      - aws --version
      - chmod +x scripts/*.sh # for some reason, +x does not carry over from git
      - scripts/install_deps.sh
      - pip list

  pre_build:
    commands:
      - pytest tests -vrf
      - scripts/lint_py.sh
      - scripts/lint_cfn.sh

  build:
    commands:
      - scripts/build_layer.sh

  post_build:
    commands:
      # ensure we're not deploying a stale version
      - scripts/assert_new_version.sh

      # make the layer available to SAR
      - |
        aws cloudformation package \
            --template-file template.yml \
            --s3-bucket $ARTIFACTS_BUCKET \
            --output-template-file packaged.yml
      - OBJECT_KEY=$(cat packaged.yml | grep ContentUri | cut -f 4 -d '/')
      - |
        aws s3api put-object-acl \
            --bucket $ARTIFACTS_BUCKET \
            --key $OBJECT_KEY \
            --acl public-read

      # publish the new version, keep the app up-to-date
      - |
        aws serverlessrepo create-application-version \
            --application-id $APP_ID \
            --semantic-version `cat SAR_APP_VERSION.txt` \
            --source-code-url 'https://github.com/milancermak/lambdacore' \
            --template-body file://packaged.yml
      - |
        aws serverlessrepo update-application \
            --application-id $APP_ID \
            --readme-body file://README.md

cache:
  paths:
    - pip_cache
